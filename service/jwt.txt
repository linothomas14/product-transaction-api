// package service

// import (
// 	"github.com/dgrijalva/jwt-go"
// )

// //JWTService is a contract of what jwtService can do
// type JWTService interface {
// 	GenerateToken(userID string) string
// 	ValidateToken(token string) (*jwt.Token, error)
// }

// type jwtService struct {
// 	secretKey string
// 	issuer    string
// }

//NewJWTService method is creates a new instance of JWTService
// func NewJWTService() JWTService {
// 	return &jwtService{
// 		issuer:    "lino",
// 		secretKey: getSecretKey(),
// 	}
// }

// func (j *jwtService) GenerateToken(UserID string) string {
// 	claims := &jwtCustomClaim{
// 		UserID,
// 		jwt.StandardClaims{
// 			ExpiresAt: time.Now().AddDate(1, 0, 0).Unix(),
// 			Issuer:    j.issuer,
// 			IssuedAt:  time.Now().Unix(),
// 		},
// 	}
// 	token := jwt.NewWithClaims(jwt.SigningMethodHS256, claims)
// 	t, err := token.SignedString([]byte(j.secretKey))
// 	if err != nil {
// 		panic(err)
// 	}
// 	return t
// }
